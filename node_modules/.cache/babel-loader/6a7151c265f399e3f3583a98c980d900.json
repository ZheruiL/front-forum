{"ast":null,"code":"var _jsxFileName = \"/Users/zherui/nodejs/react-tp1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nconst btn1 = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, \"Hello, world!\"), React.createElement(\"button\", {\n  onClick: e => showTime(e, 123, 456),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}, \"\\u8349\\u6CE5\\u9A6C\"));\n\nfunction Welcome(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, \"\\u543C\\u54C7, \", props.name);\n}\n\nconst element = React.createElement(Welcome, {\n  name: \"dongjianhua\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16\n  },\n  __self: this\n});\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://api.example.com/items').then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result.items\n      });\n    }, // 注意：需要在此处处理错误\n    // 而不是使用 catch() 去捕获错误\n    // 因为使用 catch 去捕获异常会掩盖掉组件本身可能产生的 bug\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n    if (error) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Error: \", error.message);\n    } else if (!isLoaded) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, \"Loading...\");\n    } else {\n      return React.createElement(\"ul\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, items.map(item => React.createElement(\"li\", {\n        key: item.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, item.name, \" \", item.price)));\n    }\n  }\n\n}\n\nfunction showTime(parm1, parm2, parm3) {\n  console.log(parm1);\n  console.log(parm2);\n  console.log(parm3); // ReactDOM.render(btn1, document.getElementById('root'))\n\n  setInterval(tick, 100);\n}\n\nfunction tick() {\n  const element = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"Hello, world!\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \"It is \", new Date().toLocaleTimeString(), \".\"));\n  ReactDOM.render(element, document.getElementById('root'));\n}\n\nReactDOM.render(btn1, document.getElementById('root'));\n/* ReactDOM.render(\n  element,\n  document.getElementById('root')\n) */\n// ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/zherui/nodejs/react-tp1/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","btn1","e","showTime","Welcome","props","name","element","MyComponent","Component","constructor","state","error","isLoaded","items","componentDidMount","fetch","then","res","json","result","setState","render","message","map","item","price","parm1","parm2","parm3","console","log","setInterval","tick","Date","toLocaleTimeString","document","getElementById","unregister"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nconst btn1 = (\n  <div>\n    <h1>Hello, world!</h1>\n    <button onClick={(e) => showTime(e, 123, 456)}>草泥马</button>\n  </div>\n)\nfunction Welcome (props) {\n  return <h1>吼哇, {props.name}</h1>\n}\nconst element = <Welcome name='dongjianhua' />\n\nclass MyComponent extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    }\n  }\n\n  componentDidMount () {\n    fetch('https://api.example.com/items')\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items\n          })\n        },\n        // 注意：需要在此处处理错误\n        // 而不是使用 catch() 去捕获错误\n        // 因为使用 catch 去捕获异常会掩盖掉组件本身可能产生的 bug\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          })\n        }\n      )\n  }\n\n  render () {\n    const { error, isLoaded, items } = this.state\n    if (error) {\n      return <div>Error: {error.message}</div>\n    } else if (!isLoaded) {\n      return <div>Loading...</div>\n    } else {\n      return (\n        <ul>\n          {items.map(item => (\n            <li key={item.name}>\n              {item.name} {item.price}\n            </li>\n          ))}\n        </ul>\n      )\n    }\n  }\n}\n\nfunction showTime (parm1, parm2, parm3) {\n  console.log(parm1)\n  console.log(parm2)\n  console.log(parm3)\n  // ReactDOM.render(btn1, document.getElementById('root'))\n  setInterval(tick, 100)\n}\nfunction tick () {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  )\n  ReactDOM.render(element, document.getElementById('root'))\n}\nReactDOM.render(btn1, document.getElementById('root'))\n\n/* ReactDOM.render(\n  element,\n  document.getElementById('root')\n) */\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"]},"metadata":{},"sourceType":"module"}
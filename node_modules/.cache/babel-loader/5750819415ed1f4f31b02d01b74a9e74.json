{"ast":null,"code":"var _jsxFileName = \"/Users/zherui/nodejs/react-tp1/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport ProductTable from './showProducts';\nimport * as serviceWorker from './serviceWorker';\nimport Template from './component/template/template';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nconst numbers = [1, 2, 3, 4, 5]; // const doubled = numbers.map((number) => number * 2) // 当箭头函数的函数体只有一个 `return` 语句时，可以省略 `return` 关键字和方法体的花括号\n\nconst doubled = numbers.map(ele => {\n  return ele * 2;\n});\nconsole.log(doubled);\nconst btn1 = React.createElement(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23\n  },\n  __self: this\n}, \"Hello, world!\"), React.createElement(\"button\", {\n  onClick: e => showTime(e, 123, 456),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24\n  },\n  __self: this\n}, \"\\u8349\\u6CE5\\u9A6C\"));\n\nfunction Welcome(props) {\n  return React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\u543C\\u54C7, \", props.name);\n}\n\nconst element = React.createElement(Welcome, {\n  name: \"dongjianhua\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n});\n\nfunction showTime(parm1, parm2, parm3) {\n  console.log(parm1);\n  console.log(parm2);\n  console.log(parm3); // ReactDOM.render(btn1, document.getElementById('root'))\n\n  setInterval(tick, 100);\n}\n\nfunction tick() {\n  const element = React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Hello, world!\"), React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"It is \", new Date().toLocaleTimeString(), \".\"));\n  ReactDOM.render(element, document.getElementById('root'));\n} // ReactDOM.render(btn1, document.getElementById('root'))\n\n\nconst products = [];\nproducts.push({\n  _id: 'product1',\n  name: 'apple',\n  price: 2\n});\nproducts.push({\n  _id: 'product2',\n  name: 'tree',\n  price: 3\n});\nproducts.push({\n  _id: 'product3',\n  name: 'caonima',\n  price: 4\n}); // ReactDOM.render(<ProductTable products={products} />, document.getElementById('root'))\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}));\n\nfunction PaperSheet(props) {\n  const classes = useStyles();\n  return React.createElement(Paper, {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h3\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, props.title), React.createElement(Typography, {\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, props.content));\n}\n\nfunction Test() {\n  let topics = [];\n  topics.push({\n    _id: \"t_1\",\n    title: \"为什么我能在《死亡搁浅》的世界里逗留100小时？\",\n    content: \"游研社： 我已经是30万赞的搁浅KOL了。 文 / 嘤肉卫星 看到这篇文章的时候，应该有不少玩家已经走上了“快递”或者“云快递”之旅了，对于《死亡搁浅》到底长什么样、怎么玩，应该也有了自己的理解。 我知道对于…\"\n  });\n  topics.push({\n    _id: \"t_2\",\n    title: \"我在网上合法买了正规电影，让大家一起看违法吗? \",\n    content: \"漢韻華風： 我花十块钱买了漫威电影 让宿舍的人一起看 宿舍的人就不用花钱 ——如果都在你个人使用的电脑上播放观看，合法。 如果我做了个网站让几十万人一起看\"\n  });\n  topics.push({\n    _id: \"t_3\",\n    title: \"你见过最侮辱观众智商的广告是哪个？ \",\n    content: \"TOPYS： 去了台湾，淘宝也开始拍洗脑广告了。：） 这条广告，我看完第一反应，是沉默了3秒。 你以为这就是“超扯”了？ 结果他们还出了双十一续集，我真的觉得我的智商受到了羞辱。 这一次解决了我这两大“心结”：…\"\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(Template, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, topics.map((topic, index) => React.createElement(PaperSheet, {\n    key: topic._id,\n    title: topic.title,\n    content: topic.content,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  })), React.createElement(PaperSheet, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n}\n\nReactDOM.render(React.createElement(Test, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93\n  },\n  __self: this\n}), document.getElementById('root')); // ReactDOM.render(<Template content = 'qq'/>, document.getElementById('root'))\n\n/* ReactDOM.render(\n  element,\n  document.getElementById('root')\n) */\n// ReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/zherui/nodejs/react-tp1/src/index.js"],"names":["React","ReactDOM","App","ProductTable","serviceWorker","Template","makeStyles","Paper","Typography","ListItem","ListItemIcon","numbers","doubled","map","ele","console","log","btn1","e","showTime","Welcome","props","name","element","parm1","parm2","parm3","setInterval","tick","Date","toLocaleTimeString","render","document","getElementById","products","push","_id","price","useStyles","theme","root","padding","spacing","PaperSheet","classes","title","content","Test","topics","topic","index","unregister"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport ProductTable from './showProducts'\nimport * as serviceWorker from './serviceWorker'\nimport Template from './component/template/template'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport ListItem from \"@material-ui/core/ListItem\"\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\"\n\nconst numbers = [1, 2, 3, 4, 5]\n// const doubled = numbers.map((number) => number * 2) // 当箭头函数的函数体只有一个 `return` 语句时，可以省略 `return` 关键字和方法体的花括号\nconst doubled = numbers.map((ele) => {\n  return ele * 2\n})\nconsole.log(doubled)\n\nconst btn1 = (\n  <div>\n    <h1>Hello, world!</h1>\n    <button onClick={(e) => showTime(e, 123, 456)}>草泥马</button>\n  </div>\n)\nfunction Welcome (props) {\n  return <h1>吼哇, {props.name}</h1>\n}\nconst element = <Welcome name='dongjianhua' />\n\nfunction showTime (parm1, parm2, parm3) {\n  console.log(parm1)\n  console.log(parm2)\n  console.log(parm3)\n  // ReactDOM.render(btn1, document.getElementById('root'))\n  setInterval(tick, 100)\n}\nfunction tick () {\n  const element = (\n    <div>\n      <h1>Hello, world!</h1>\n      <h2>It is {new Date().toLocaleTimeString()}.</h2>\n    </div>\n  )\n  ReactDOM.render(element, document.getElementById('root'))\n}\n// ReactDOM.render(btn1, document.getElementById('root'))\nconst products = []\nproducts.push({ _id: 'product1', name: 'apple', price: 2 })\nproducts.push({ _id: 'product2', name: 'tree', price: 3 })\nproducts.push({ _id: 'product3', name: 'caonima', price: 4 })\n\n// ReactDOM.render(<ProductTable products={products} />, document.getElementById('root'))\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: theme.spacing(3, 2)\n  }\n}))\n\nfunction PaperSheet (props) {\n  const classes = useStyles()\n\n  return (\n    <Paper className={classes.root}>\n      <Typography variant='h5' component='h3'>\n        {props.title}\n      </Typography>\n      <Typography component='p'>\n        {props.content}\n      </Typography>\n    </Paper>\n  )\n}\nfunction Test () {\n  let topics = []\n  topics.push({_id: \"t_1\", title: \"为什么我能在《死亡搁浅》的世界里逗留100小时？\", content: \"游研社： 我已经是30万赞的搁浅KOL了。 文 / 嘤肉卫星 看到这篇文章的时候，应该有不少玩家已经走上了“快递”或者“云快递”之旅了，对于《死亡搁浅》到底长什么样、怎么玩，应该也有了自己的理解。 我知道对于…\"})\n  topics.push({_id: \"t_2\", title: \"我在网上合法买了正规电影，让大家一起看违法吗? \", content: \"漢韻華風： 我花十块钱买了漫威电影 让宿舍的人一起看 宿舍的人就不用花钱 ——如果都在你个人使用的电脑上播放观看，合法。 如果我做了个网站让几十万人一起看\"})\n  topics.push({_id: \"t_3\", title: \"你见过最侮辱观众智商的广告是哪个？ \", content: \"TOPYS： 去了台湾，淘宝也开始拍洗脑广告了。：） 这条广告，我看完第一反应，是沉默了3秒。 你以为这就是“超扯”了？ 结果他们还出了双十一续集，我真的觉得我的智商受到了羞辱。 这一次解决了我这两大“心结”：…\"})\n  return (\n    <div>\n      <Template>\n        {topics.map((topic, index) => (\n          <PaperSheet key={topic._id} title={topic.title} content={topic.content}/>\n        ))}\n        <PaperSheet />\n      </Template>\n    </div>\n  )\n}\n\nReactDOM.render(<Test />, document.getElementById('root'))\n// ReactDOM.render(<Template content = 'qq'/>, document.getElementById('root'))\n\n/* ReactDOM.render(\n  element,\n  document.getElementById('root')\n) */\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"]},"metadata":{},"sourceType":"module"}